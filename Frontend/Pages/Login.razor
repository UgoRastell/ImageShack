@page "/login"
@inject Services.ApiService ApiService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject Blazored.Toast.Services.IToastService ToastService

@using Models.ViewModel
<h3>Login</h3>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h3 class="card-title">Se connecter</h3>
                </div>
                <div class="card-body">
                    <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="mb-3">
                            <label for="email" class="form-label">Email</label>
                            <InputText id="email" class="form-control" @bind-Value="loginModel.Email" />
                        </div>
                        <div class="mb-3">
                            <label for="password" class="form-label">Password</label>
                            <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
                        </div>
                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary">Login</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginViewModel loginModel = new LoginViewModel();

    private async Task HandleLogin()
    {
        try
        {
            Console.WriteLine("Attempting to login...");

            var token = await ApiService.LoginAsync(loginModel);

            if (token != null)
            {
                await JSRuntime.InvokeVoidAsync("localStorage.setItem", "authToken", token);
                ToastService.ShowSuccess("Login successful!");
                NavigationManager.NavigateTo("/", true);
            }
            else
            {
                Console.WriteLine("Login failed: Token is null.");
                ToastService.ShowError("Login failed: Token is null.");
            }
        }
        catch (HttpRequestException httpEx)
        {
            Console.WriteLine($"Login failed: {httpEx.Message}");
            ToastService.ShowError($"Login failed: {httpEx.Message}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Login failed: {ex.Message}");
            ToastService.ShowError($"Login failed: {ex.Message}");
        }
    }
}
